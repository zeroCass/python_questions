"""
Problema:
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

# logica:
# construir uma funcao que percorra a sequencia de fibonacci
# sempre que esse numero for multiplo 2, ou seja, par, entao soma ele


import math
# retorna a soma dos valores pares ate o n-esimo numero da sequencia passado em n
def even_fibonacci (n: int) -> int:

    if n == 1:
        return 0                                    # retorna 0 pois nao tem numero par
    elif n == 2:
        return 2                                    # retorna 2 pois 2 eh par
    else:                                           
        anterior_a, anterior_b, fibo = 1, 2, 0      # declara variaveis importates
        i, soma = 2, 2                              # iterador comeca em 2 pois ja esta na sequencia 2 
        
        while i < n:                                # loop que percorre ate o n-esimo numero da sequencia
            fibo = anterior_a + anterior_b          # fibonacci = num_anterior1 + num_anterior2 (do num_anterior)
            anterior_a, anterior_b = anterior_b, fibo
            print(fibo)
            if fibo % 2 == 0:
                soma += fibo
            
            i += 1


    return soma


n = int(input())                                     # 32 primeiros numeros da sequencia, menor que 4 milhoes
if n < (4 * math.pow(10,16)):
    print(even_fibonacci(n))



